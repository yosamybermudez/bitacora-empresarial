# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/App/'
        exclude:
            - '../src/App/DependencyInjection/'
            - '../src/App/Entity/'
            - '../src/App/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    dbla_user.session_listener.login:
        class: App\Listener\SessionListener
        arguments: ["@doctrine.orm.default_entity_manager", "@router", '@security.untracked_token_storage','@security.role_hierarchy']
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onLogin }

#    dbla_user.session_listener.logout:
#        class: App\Listener\SessionListener
#        arguments: ["@doctrine.orm.default_entity_manager", "@router", '@security.untracked_token_storage','@security.role_hierarchy']
#        tags:
#            - { name: kernel.event_listener, event: security.logout, method: onLogout }

#    app.controller.principal:

#    authentication_handler:
#        class: App\Handler\AuthenticationSuccessHandler
#        arguments: ['@router', "@doctrine.orm.default_entity_manager"]

#    kernel.listener.kernel_request:
#        class: App\Listener\ExceptionListener
#        arguments: ["@router"]
#        tags:
#            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException}
